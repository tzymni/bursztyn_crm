!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("tui-calendar")):"function"==typeof define&&define.amd?define("ngx-tui-calendar",["exports","@angular/core","tui-calendar"],t):t(e["ngx-tui-calendar"]={},e.ng.core,null)}(this,function(e,a,o){"use strict";var n=function t(){this.defaultView="week",this.taskView=!1,this.useCreationPopup=!1,this.useDetailPopup=!1,this.scheduleView=!0,this.disableDblClick=!1,this.week={daynames:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],startDayOfWeek:1,narrowWeekend:!1}},i=function(){function e(e,t){var n=this;this.elm=e,this.defaults=t,this.beforeCreateSchedule=new a.EventEmitter,this.beforeDeleteSchedule=new a.EventEmitter,this.afterRenderSchedule=new a.EventEmitter,this.tuiCalendarCreated=new a.EventEmitter,this.dayNameClicked=new a.EventEmitter,this.timeClicked=new a.EventEmitter,this.scheduleClicked=new a.EventEmitter,this.beforeUpdateSchedule=new a.EventEmitter;var i={defaultView:this.defaultView,taskView:this.taskView,scheduleView:this.scheduleView,template:this.template,month:this.month,week:this.week};Object.keys(this.defaults).forEach(function(e){"undefined"==typeof i[e]&&(i[e]=n.defaults[e])}),Object.keys(i).forEach(function(e){"undefined"==typeof i[e]&&delete i[e]}),this.tuiCalendar=new o(this.elm.nativeElement,i),this.tuiCalendarCreated.emit({tuiCalendar:this.tuiCalendar}),this.tuiCalendar.on("beforeCreateSchedule",function(e){"mouseup"===e.triggerEventName&&n.timeClicked.emit(e.start)}),this.tuiCalendar.on("afterRenderSchedule",function(e){n.afterRenderSchedule.emit(e)}),this.tuiCalendar.on("beforeCreateSchedule",function(e){n.beforeCreateSchedule.emit(e)}),this.tuiCalendar.on("beforeDeleteSchedule",function(e){n.beforeDeleteSchedule.emit(e)}),this.tuiCalendar.on("beforeUpdateSchedule",function(e){n.beforeUpdateSchedule.emit(e)}),this.tuiCalendar.on("clickDayname",function(e){n.dayNameClicked.emit(e)}),this.tuiCalendar.on("clickSchedule",function(e){n.scheduleClicked.emit(e)})}return e.prototype.ngOnChanges=function(e){e.schedules!==undefined&&this.updateSchedules()},e.prototype.updateSchedules=function(){this.tuiCalendar.clear(),this.tuiCalendar.createSchedules(this.schedules,!0),this.tuiCalendar.render()},e.prototype.setTimeZoneOffset=function(e){this.tuiCalendar.setTimeZoneOffset(e)},e.prototype.setTimeZoneOffsetCallback=function(e){this.tuiCalendar.setTimeZoneOffset(e)},e.prototype.changeView=function(e){this.tuiCalendar.changeView(e)},e.prototype.clear=function(){this.tuiCalendar.clear()},e.prototype.createSchedules=function(e){this.tuiCalendar.createSchedules(e)},e.prototype.deleteSchedule=function(e,t,n){this.tuiCalendar.deleteSchedule(e,t,n)},e.prototype.destroy=function(){this.tuiCalendar.destroy()},e.prototype.getDate=function(){this.tuiCalendar.getDate()},e.prototype.getDateRangeEnd=function(){this.tuiCalendar.getDateRangeEnd()},e.prototype.getDateRangeStart=function(){this.tuiCalendar.getDateRangeStart()},e.prototype.getElement=function(e,t){this.tuiCalendar.getElement(e,t)},e.prototype.getOptions=function(){this.tuiCalendar.getOptions()},e.prototype.getSchedule=function(e,t){this.tuiCalendar.getSchedule(e,t)},e.prototype.getViewName=function(){this.tuiCalendar.getViewName()},e.prototype.hideMoreView=function(){this.tuiCalendar.hideMoreView()},e.prototype.next=function(){this.tuiCalendar.next()},e.prototype.prev=function(){this.tuiCalendar.prev()},e.prototype.openCreationPopup=function(e){this.tuiCalendar.openCreationPopup(e)},e.prototype.render=function(){this.tuiCalendar.render()},e.prototype.scrollToNow=function(){this.tuiCalendar.scrollToNow()},e.prototype.setCalendarColor=function(e,t,n){this.tuiCalendar.setCalendarColor(e,t,n)},e.prototype.setCalendars=function(e){this.tuiCalendar.setCalendars(e)},e.prototype.setDate=function(e){this.tuiCalendar.setDate(e)},e.prototype.setOptions=function(e,t){this.tuiCalendar.setOptions(e,t)},e.prototype.setTheme=function(e){this.tuiCalendar.setTheme(e)},e.prototype.today=function(){this.tuiCalendar.today()},e.prototype.toggleSchedules=function(e,t,n){this.tuiCalendar.toggleSchedules(e,t,n)},e.prototype.updateSchedule=function(e,t,n,i){this.tuiCalendar.updateSchedule(e,t,n,i)},e.decorators=[{type:a.Component,args:[{selector:"ngx-tui-calendar",template:""}]}],e.ctorParameters=function(){return[{type:a.ElementRef},{type:n}]},e.propDecorators={defaultView:[{type:a.Input}],taskView:[{type:a.Input}],scheduleView:[{type:a.Input}],template:[{type:a.Input}],month:[{type:a.Input}],week:[{type:a.Input}],schedules:[{type:a.Input}],beforeCreateSchedule:[{type:a.Output}],beforeDeleteSchedule:[{type:a.Output}],afterRenderSchedule:[{type:a.Output}],tuiCalendarCreated:[{type:a.Output}],dayNameClicked:[{type:a.Output}],timeClicked:[{type:a.Output}],scheduleClicked:[{type:a.Output}],beforeUpdateSchedule:[{type:a.Output}]},e}(),u=new a.InjectionToken("tuiCalendar defaults");function r(e){var t=new n;return Object.assign(t,e),t}var d=function(){function t(){}return t.forRoot=function(e){return void 0===e&&(e={}),{ngModule:t,providers:[{provide:u,useValue:e},{provide:n,useFactory:r,deps:[u]}]}},t.decorators=[{type:a.NgModule,args:[{declarations:[i],exports:[i],providers:[{provide:n,useClass:n}]}]}],t}();e.TuiCalendarDefaults=n,e.NgxTuiCalendarComponent=i,e.USER_DEFAULTS=u,e.defaultsFactory=r,e.NgxTuiCalendarModule=d,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-tui-calendar.umd.min.js.map